//first approch

#include<bits/stdc++.h>
using namespace std;

vector<int>v;

bool isPrime(int n){
    for(int i=2; i*i<=n; i++){
        if(n%i==0){
            return false;
        }
    }
    return true;
}

void sive(){
    v.push_back(2);
    for(int i=3; i<=1000000; i+=2){
        if(isPrime(i)){
            v.push_back(i);
        }
    }
}

int main(){
    sive();
    int t;
    cin>>t;
    while(t--){
        int n ;
        cin>>n;
        cout<<v[n-1]<<endl;
    }

}


/*second approch
#include<bits/stdc++.h>
using namespace std;
#define mx 1000000

void solve(vector<int>&v){
    bool prime[mx];
    memset(prime,true,sizeof(prime));

    for(int i=2; i*i<mx; i++){
        if(prime[i]==true){
            for(int j=i*i; j<mx; j+=i){
                prime[j]=false;
            }
        }
    }

    for(int i=2; i<mx; i++){
        if(prime[i]){
            v.push_back(i);
        }
    }

}


int main(){
    vector<int>v;
    solve(v);
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        cout<<v[n-1]<<endl;
    }

}
*/
